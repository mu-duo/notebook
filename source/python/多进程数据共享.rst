关于多进程中数据的共享的一个 bug.
===============================================================

问题复述:
    在处理多进程中共享数据队列 Manager().Queue(), 但为其编写错误处理 KeyboardException 时, 在主进程中数据
    无法正常从 Queue 中拿出, 经研究查询, 使用 multiprocess 的 Queue 解决该问题.

原因所在:

========== ========================= ===============================
特性        multiprocessing.Queue()     Manager().Queue()
========== ========================= ===============================
实现机制    基于管道和锁                通过 Manager 进程的代理机制
适用场景    本地进程通信                分布式进程或需要共享复杂对象
性能        高性能、低延迟              性能较低，尤其在大量数据传输时
分布式支持  不支持                      支持分布式通信
序列化      pickle 直接序列化           pickle + 代理序列化
错误处理    更稳定                      Manager 终止可能导致失效
线程安全    是                          是
========== ========================= ===============================

除此之外, multiprocessing 的 Event / Dict 等数据结构均与 Manager 中的数据结构有如上差异.